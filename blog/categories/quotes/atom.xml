<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: quotes | Ruby Studio Blog]]></title>
  <link href="http://blog.rubystudio.net/blog/categories/quotes/atom.xml" rel="self"/>
  <link href="http://blog.rubystudio.net/"/>
  <updated>2012-07-26T10:49:52+03:00</updated>
  <id>http://blog.rubystudio.net/</id>
  <author>
    <name><![CDATA[Svilen Vassilev]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DHH on the levels of aspiration]]></title>
    <link href="http://blog.rubystudio.net/blog/2012/07/10/dhh-on-the-levels-of-aspiration/"/>
    <updated>2012-07-10T19:17:00+03:00</updated>
    <id>http://blog.rubystudio.net/blog/2012/07/10/dhh-on-the-levels-of-aspiration</id>
    <content type="html"><![CDATA[<p><a href="http://david.heinemeierhansson.com/">DHH</a> has posted some insightful remarks about the vertical structure
of technology and coding in particular, and the forces and ideas that keep it rolling.</p>

<p><blockquote><p>Debates over technology, technique, and process often go nowhere because the participants are arguing from different levels of aspiration. You’re unlikely to convince someone they should switch to programming Ruby for it’s beauty, if they’re merely looking to make a living...</p><footer><strong>David Heinemeier Hansson</strong> <cite><a href='http://37signals.com/svn/posts/3200-levels-of-aspiration'>Levels of Aspiration</a></cite></footer></blockquote></p>

<p><a href="http://37signals.com/svn/posts/3200-levels-of-aspiration">Read the entire post here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compacting ruby code]]></title>
    <link href="http://blog.rubystudio.net/blog/2012/07/04/compacting-ruby-code/"/>
    <updated>2012-07-04T14:44:00+03:00</updated>
    <id>http://blog.rubystudio.net/blog/2012/07/04/compacting-ruby-code</id>
    <content type="html"><![CDATA[<p><a href="http://www.drurly.com/">Dru Riley</a> has posted a nice example on refactoring a reddit-like ruby application
into just 10 lines of very dense code.</p>

<p><blockquote><p>We are using an application ... to explore seldom used features of Ruby. This tutorial will highlight concepts such as ternary operators, multiple assignment, and multiple argument passing.</p><footer><strong>Dru Riley</strong> <cite><a href='http://www.drurly.com/blog/2012/06/26/reddit-in-10-lines-of-code/'>Tutorial: Reddit in 10 Lines of Code</a></cite></footer></blockquote></p>

<p><a href="http://www.drurly.com/blog/2012/06/26/reddit-in-10-lines-of-code/">Read the entire post here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zsh and the new_post generator in Octopress]]></title>
    <link href="http://blog.rubystudio.net/blog/2012/06/26/zsh-and-the-new-post-generator-in-octopress/"/>
    <updated>2012-06-26T14:53:00+03:00</updated>
    <id>http://blog.rubystudio.net/blog/2012/06/26/zsh-and-the-new-post-generator-in-octopress</id>
    <content type="html"><![CDATA[<p><a href="http://travisjeffery.com/">Travis Jeffery</a> has posted a nice explanation on how to avoid
zsh errors when using the <code>new_post</code> generator with <a href="http://octopress.org">Octopress</a>.</p>

<p><img src="http://i.imgur.com/zCwzE.png"></p>

<p><blockquote><p>So here’s the problem, ... throwing junk into your Zsh configuration before understanding what it all meant! ...</p><footer><strong>Travis Jeffery</strong> <cite><a href='http://travisjeffery.com/b/2012/01/zshs-extended-glob-and-octopresss-new-post-script/'>Zsh's Extended Glob, and Octopress's New_post Script</a></cite></footer></blockquote></p>

<p><a href="http://travisjeffery.com/b/2012/01/zshs-extended-glob-and-octopresss-new-post-script/">Read the entire post here</a></p>
]]></content>
  </entry>
  
</feed>
